## Metodo STR
print("Primero estamos viendo de ingresar palabras en minuscula y \n vemos como se pasan a mayuscula con el metodo \n variable.upper()")
i = input("Ingrese su nombre: ")
print("El nombre de la persona es: ", i.upper())
print("\n***********Luego***********\n")
print("Vemos como pasamos una cadena de texto en mayuscula y con el \n metodo variable.lower() la pasamos a minuscula")
j=input("Ingrese su apellido: ")
print("El apellido de la persona es: ",j.lower())
## Ahora a modo de comentario e idea, estoy pensando
## Que para trabajar todo lo de PNL podriamos crear un
## Bucle for para que pase todos los comentariosa mayuscula
## Y ver que comportamiento tiene, y luego pasar todo a minuscula
## Y ver que comportamiento tiene.
print("\n***********Luego***********\n")
print("Tenemos otro metodo que es el variable.capitalize()\ny lo que hace es ponernos la primer letra en mayuscula\n")
ij=input("Que carrera estudia ?: ")
print("La carrera que estudia es: ",ij.capitalize())
print("\n***********Luego***********\n")
print("Hay otro metodo llamado count, lo que hace es contar la cantidad de veces que \nse repite una palabra o letras y se usa de la siguiente manera\nvariable.count(""y dentro de estas comillas\nva la letra o palabra buscada"")\n")
ijk=input("Escriba una frase o algo: ")
palabrabuscada=input("Ingrese la letra o palabra que busca:")
print("La que usted busca se repite: ",ijk.count(palabrabuscada),"veces")
print("\n***********Luego***********\n")
print("Está el método find, lo que hace es buscar en que parte de la cadena\nse encuentra cierto caracter\n")
ejemplo=input("Ingrese una palabra: ")
buscada=input("Ingrese lo que quiera buscar: ")
print("\nLo que está buscando se encuentra en la posición: ",ejemplo.find(buscada))
print("\nEste ultimo metodo, cuenta el primer caracter, pero si hay otro mas no lo cuenta\n")
print("\n***********Luego***********\n")
print("Tenemos otro metodo que lo que hace es devolver un booleano.\nBusca un dato tipo numerico y si se encuentra devuelve True, caso contrario\ndevuelve False\n")
ver=input("Ingrese una palabra que contenga numeros: ")
print("La palabra ingresada contiene digitos ?: ",ver.isdigit())
print("\n***********Luego***********\n")
print("Hay otro método que es el split: ")
print("Lo que hace el split es separar con espacios la cadena que nosotros\nle ingresemos, en una especie de lista\nal parecer no nos deja poner un argumento vacio, hay que separarlo con algo, con un espacio por ejemplo\n")
ejemplo=input("Ingrese una cadena de texto cualquiera: ")
print(ejemplo.split(" "))
print("\n***********Luego***********\n")
print("El metodo variable.isalnum(), lo que hace es chequear si todos los caracteres\nson alfanuméricos, y devuelve un booleano como respuesta: ")
numeros=input("Ingrese una frase que tenga o no números: ")
print("La frase ingresada tiene numeros?: ",numeros.isalnum())
print("\nDetalle, este metodo de isalnum() al parecer solo tiene en cuenta cuando la palabra\n frase no esta separada por espacios\ncuando esta separadas por espacios y contiene numeros\nno distingue si tiene o no numeros\npuede tener y dar un False, me pasó cuando le puse\nDS 33 y me dió False\n")
print("Otro método es el variable.isalpha(), se fija si la cadena que le estamos pasando es\nalfanumérico, y como resultado nos devuelve un booleano\nEjemplo, si le pasamos un abcdef, nos devuelve un True,\nsi le pasamos un abc123, nos devuelve un False\n")
alpha=input("Ingrese o no una frase alfanumerica: ")
print("La frase ingresada es alfanumerica? ",alpha.isalpha())
print("\n***********Luego***********\n")
print("Otro metodo es variable.islower(), a diferencia del que ya vimos, que es\nvariable.lower(), este nuevo metodo devuelve un booleano,\nlo que hace es ver si la variable tiene minusculas\n")
minu=input("Ingrese su frase aquí: ")
print("La frase ingresada contiene minusculas?: ", minu.islower())
print("Si la frase ingresada tiene alguna mayuscula, nos devuelve un False, caso contrario, un True.\n")
print("Hay muchos metodos más, estos son sólo algunos de ellos")
